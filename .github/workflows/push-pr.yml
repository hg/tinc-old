name: Run tests on pushes and pull requests

on:
  - push
  - pull_request

jobs:
  test-linux:
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
        compiler: [clang, gcc]
        legacy_protocol: ["", --disable-legacy-protocol]

    runs-on: ${{ matrix.os }}
    env:
      CC: ${{ matrix.compiler }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Artistic Style and build deps
        run: >
          sudo apt-get install -y --no-install-{recommends,suggests}
          zlib1g-dev
          liblzo2-dev
          libncurses-dev
          libreadline-dev
          libminiupnpc-dev
          libvdeplug-dev
          astyle
          socket

      - name: Install OpenSSL
        run: sudo apt-get install -y libssl-dev
        if: ${{ matrix.legacy_protocol == '' }}

      - name: Run autoreconf
        run: autoreconf -fsi

      - name: Run ./configure
        run: >
          ./configure 
          --prefix=/usr
          --sbindir=/usr/sbin
          --sysconfdir=/etc
          --localstatedir=/var
          --with-systemd=/usr/lib/systemd/system
          --enable-{miniupnpc,uml,vde}
          ${{ matrix.legacy_protocol }}

      - name: Check code formatting
        run: make check-style

      - name: Compile project
        run: make -j$(nproc)

      - name: Run tests
        # root is required for some tests
        run: sudo make check-recursive
        timeout-minutes: 20

      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: tests_${{ matrix.os }}_${{ matrix.compiler }}
          path: test/test-suite.log
        if: failure()

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install msys2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          # https://packages.msys2.org/package/
          install: >-
            base-devel
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-openssl
            mingw-w64-x86_64-zlib
            mingw-w64-x86_64-lzo2
            mingw-w64-x86_64-ncurses
            mingw-w64-x86_64-miniupnpc
            git

      - name: Build the project
        shell: msys2 {0}
        run: |
          autoreconf -fsi
          ./configure --with-curses-include=/mingw64/include/ncurses --disable-readline
          make -j$(nproc)

      - name: Check that tinc can be started
        shell: msys2 {0}
        run: ./src/tinc --version

      - name: Check that tincd can be started
        shell: msys2 {0}
        run: ./src/tincd --version

  test-macos:
    runs-on: macos-10.15

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: brew install coreutils netcat automake lzo miniupnpc

      - name: Run autoreconf
        run: autoreconf -fsi

      - name: Run ./configure
        run: >
          ./configure
          --with-openssl=/usr/local/opt/openssl@1.1
          --enable-{tunemu,miniupnpc}

      - name: Compile application
        run: make -j$(sysctl -n hw.ncpu)

      - name: Run tests
        run: make check-recursive
        timeout-minutes: 20

      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: tests_${{ runner.os }}
          path: test/test-suite.log
        if: failure()
